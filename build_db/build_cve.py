import sqlite3
import json
from os import listdir, path
from tqdm import tqdm


db = sqlite3.connect(':memory:')

all_files = []

CVE_PATH = './cvelistV5/cves'

for year in listdir(CVE_PATH):
    if path.isdir(path.join(CVE_PATH, year)):
        for group in listdir(path.join(CVE_PATH, year)):
            for file_name in listdir(path.join(CVE_PATH, year, group)):
                all_files.append(path.join(CVE_PATH, year, group, file_name))

print('CVE count:', len(all_files))

buffer = []

for x in tqdm(all_files):
    with open(x, 'r') as f:
        info = json.load(f)
    
    meta = info['cveMetadata']

    if meta['state'] == 'REJECTED':
        continue

    en_desp = None

    for desp in info['containers']['cna']['descriptions']:
        if desp['lang'] in ['en', 'en-US']:
            en_desp = desp['value']
            break
    
    assert en_desp

    row = [
        meta['cveId'],
        meta.get('assignerShortName', '[unknown]'),
        meta.get('dateReserved'),
        meta.get('datePublished'),
        meta.get('dateUpdated'),
        meta['state'],
        en_desp
    ]

    buffer.append(row)

db.execute('''CREATE TABLE cve (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        cve_id TEXT NOT NULL,
        assigner TEXT NOT NULL,
        date_reserved TIMESTAMPTZ,
        date_published TIMESTAMPTZ,
        date_updated TIMESTAMPTZ,
        state TEXT NOT NULL,
        description TEXT NOT NULL
)''')


db.executemany(
    'INSERT INTO cve(cve_id, assigner, date_reserved, date_published, date_updated, state, description) VALUES (?, ?, ?, ?, ?, ?, ?)',
    buffer
)

db.commit()

with sqlite3.connect('info.db') as db_file:
    db.backup(db_file)

